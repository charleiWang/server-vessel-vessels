server.port=8091
server.servlet.context-path=/api
spring.mvc.servlet.path=/vessels/commands

vesseltracking-activity-id=999

info.microservice.name=@project.name@
info.microservice.description=@project.description@
info.microservice.version=@project.version@
info.microservice.outputEncoding=@project.reporting.outputEncoding@
info.microservice.documentation=${server.servlet.context-path}${spring.mvc.servlet.path}/documentation/vessels-command.html

management.endpoints.web.exposure.include=health, info, prometheus

#oauth
oauth.userid.endpoint=${oauth.server}/api/oauth/userid
oauth.check_token.endpoint=${oauth.server}/api/oauth/check_token
oauth.client.id=clientId
oauth.client.secret=secret

spring.devtools.add-properties=false

spring.profiles.active=@spring.profiles.active@

logging.level.root=info
logging.level.org.springframework=info
logging.level.es.redmic=info

spring.kafka.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.log-container-config=true
spring.kafka.listener.client-id=${spring.kafka.client-id}
spring.kafka.listener.idle-event-interval.seconds=60
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval.seconds=1

spring.kafka.client-id=@project.name@
spring.kafka.consumer.group-id=@project.name@
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

spring.kafka.consumer.max-poll-records=50

#spring.kafka.consumer.properties.max.poll.interval.ms=600000

spring.kafka.producer.retries=5
spring.kafka.properties.request.timeout.ms=605000

spring.kafka.consumer.heartbeat-interval.seconds=1
spring.kafka.consumer.properties.session.timeout.ms=60000

rest.eventsource.timeout.ms=300000
process.eventsource.timeout.ms=2400000
stream.windows.time.ms=2400000

qflag.default=0
vflag.default=N

spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.TopicRecordNameStrategy

spring.kafka.properties.schema.registry.url=${spring.kafka.properties.schema.registry.url}

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.wrap-exceptions=false
spring.jackson.serialization.write-dates-as-timestamps=false

#mapping
controller.mapping.vesseltype=/vesseltype

controller.mapping.vesseltracking=/activities/{activityId}/vesseltracking

controller.mapping.EDIT_SCHEMA=/_schema

#Alert
broker.topic.alert=alert
alert.email=info@redmic.es

#-------- Topics --------------------

#topic del broker para recibir tracking de barcos
broker.topic.realtime.tracking.vessels=realtime.tracking.vessels

#topic del broker para enviar/recibir eventos de tracking de barcos
broker.topic.vessel-tracking=vessel-tracking

#topic del broker para enviar/recibir eventos de barcos
broker.topic.vessel=vessel

# topic para aggregar tracking por vessel
broker.topic.tracking.agg.by.vessel=tracking-agg-by-vessel

#topic para enviar eventos de vessel modificados para postupdate
broker.topic.vessel.updated=vessel-updated

#topic del broker para enviar/recibir eventos de tipos de barcos
broker.topic.vessel-type=vessel-type

# topic para aggregar vessels por vesseltype
broker.topic.vessels.agg.by.vesseltype=vessels-agg-by-vessel-type

#topic para enviar eventos de vesseltype modificados para postupdate
broker.topic.vessel.type.updated=vessel-type-updated

broker.state.store.config.dir=${broker.state.store.config.dir}
stream.application.id=${stream.application.id}

#When an application is updated, the application.id should be changed unless you want to reuse the existing data in internal topics and state stores
broker.state.store.vesseltracking.id=vesselTrackingStore.${stream.application.id}
broker.stream.events.vesseltracking.id=vesselTrackingStream.${stream.application.id}
broker.state.store.vesseltracking.dir=${broker.state.store.config.dir}

broker.state.store.vessels.id=vesselStore.${stream.application.id}
broker.stream.events.vessels.id=vesselStream.${stream.application.id}
broker.state.store.vessels.dir=${broker.state.store.config.dir}

broker.state.store.vesseltypes.id=vesselTypeStore.${stream.application.id}
broker.stream.events.vesseltypes.id=vesselTypeStream.${stream.application.id}
broker.state.store.vesseltypes.dir=${broker.state.store.config.dir}

#JsonSchema
property.path.media_storage.LOCAL_PRIVATE_BASE_PATH=${property.path.media_storage.LOCAL_PRIVATE_BASE_PATH}
property.path.media_storage.JSONSCHEMA=${property.path.media_storage.LOCAL_PRIVATE_BASE_PATH}/temp/jsonschema

#Exclude from autoconfigure
spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsAutoConfiguration, org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration, org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration, org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration, org.springframework.boot.autoconfigure.aop.AopAutoConfiguration, org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration, org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration, org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration, org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration, org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration, org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration, org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration, org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration, org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration, org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration, org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration, org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration, org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration, org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration, org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration, org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration, org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration, org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration, org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration, org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration, org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration, org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration, org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration, org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration, org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration, org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration, org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration, org.springframework.boot.autoconfigure.session.SessionAutoConfiguration, org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration, org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration, org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration, org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration, org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration